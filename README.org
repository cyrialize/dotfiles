* README
My personal dotfiles.

I currently use ~zsh~ with [[https://github.com/sindresorhus/pure][pure prompt]]. My terminal emulators are [[https://iterm2.com/][iTerm2]] and [[https://wezfurlong.org/wezterm/][WezTerm]].

The scripts themselves are written in ~bash~. There isn't a huge difference between programming in ~bash~ and ~zsh~, but I prefer ~bash~ just to make sure it is more universal.

~setup.sh~ is my main script - it tries it's best to pull in everything needed for this setup. There are other scripts, feel free to go through the repo!

Previous scripts and snippets I've used can be found in ~GRAVEYARD.org~.

* Resources
Here are some resources that I reference while working on my dotfiles:

- General
  - https://dotfiles.github.io/
- Shell
  - https://www.shellcheck.net
  - https://www.shellscript.sh/
- ZSH
  - https://zsh.sourceforge.io/
  - https://github.com/zsh-users
- Bash
  - https://github.com/bash-lsp/bash-language-server
  - https://learnxinyminutes.com/docs/bash/
  - https://mywiki.wooledge.org/BashGuide
    - Here's an updated version of the above: https://guide.bash.academy/
  - https://www.gnu.org/software/bash/manual/bash.html
- MacOS
  - ~man defaults~
  - https://github.com/mathiasbynens/dotfiles/blob/master/.macos
  - ~launchd~: the MacOS open source framework for managing daemons
    - https://launchd.info/
** Template related resources
These are resources that I reference in the ~lib/project_templates~ folder.

*** Ruby
- https://bundler.io/
- https://github.com/postmodern/chruby

*** Python
- https://rye.astral.sh/
* Setup
I daily drive MacOS. I hope to add Linux support soon.

If you'd like to use this yourself, run these commands:
#+BEGIN_SRC sh
git clone https://github.com/cyrialize/dotfiles.git "$HOME/Code/dotfiles"
chmod +x $HOME/Code/dotfiles/setup.sh
$HOME/Code/dotfiles/setup.sh
#+END_SRC

* Usage
#+BEGIN_SRC
❯ ./setup.sh -h
Setup script for setting up my dotfiles. Intended for MacOS. Linux
support planned in the future.

Checks for OS support prior to running anything.

Usage:
--a Run all flags.
--i Run install.sh to install/update libs, pure, and base16-shell.
--l Connect symlinks.
--h See this message.
#+END_SRC

#+BEGIN_SRC
❯ ./bin/new_project.sh -h
Sets up a new project based on templates in "project_templates".

Usage:
-c project choice, matches a folder name in "project_templates"
-p path to set up project
#+END_SRC

* Further Plans
** Linux / Multi-OS Support

In ~helpers.sh~ I have generic functions that are meant to call other relevant functions for each OS. I need to create ones for Linux, specifically ~apt~.

There are a number of things in this repo that really are for MacOS only. I'd like to find a way to indicate what is and isn't for each OS, so that things that aren't specific to a targeted OS aren't setup.

** Git Hooks Library

I want to have a directory/snippet of ~git~ hooks that can be pulled into projects via the ~new_project.sh~. For example, the ~pre-commit.sh~ script for this repo calls ~shellcheck~ on all ~*.sh~ files. That'd be a nice script to pull into any project with ~*.sh~ files.

** Hammerspoon Scripts

I've played around with Hammerspoon a bit for MacOS automation. I should bring the scripts in here!

** Set up editorconfig support

I switch around with different editors often, using ~.editorconfig~ would make that easier: https://editorconfig.org/

** Switch to full Brewfile support

I have a ~.brewfile~, but I want to update my install script to use it (if on mac), and I want to put my ~.brewfile.lock~ under version control.
* To Dos
** TODO Finish setting up brewfile
** TODO Finish setting up yabai
** TODO Finish setting up sketchybar
** TODO Add scripts to set up Ice
https://github.com/jordanbaird/Ice
** TODO Add scripts to set up SwiftBar
https://github.com/swiftbar/SwiftBar
