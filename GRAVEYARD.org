* About
Here are a collection of scripts and snippets that used to be part of my files. I couldn't think of a good place to put them.

I didn't want to have a separate file I wouldn't use, nor a configuration file with flags.

So here they are!

* Base16 Shell

This was my previous set up for a theme, using https://github.com/chriskempson/base16-shell.

This has since been replaced with WezTerm and theme configurations in WezTerm.

This used to be part of my ~.zshrc~.
#+BEGIN_SRC sh
# Base16 Shell
BASE16_SHELL_PATH="$HOME/.config/base16-shell"
[ -n "$PS1" ] && \
  [ -s "$BASE16_SHELL_PATH/profile_helper.sh" ] && \
    source "$BASE16_SHELL_PATH/profile_helper.sh"
base16_tomorrow-night-eighties
#+END_SRC

This used to be part of my ~bin/install.sh~ file:
#+BEGIN_SRC sh
# Pull in and install the base16 shell theme
# https://github.com/base16-project/base16-shell
if [[ ! -d $HOME/.config/base16-shell ]]; then
    print_color "yellow" "Installing base16 shell themes..."
    git clone https://github.com/base16-project/base16-shell.git ~/.config/base16-shell
    log_result "Installation" "$?"
else
    print_color "yellow" "base16 shell themes are already installed!"
    print_color "yellow" "Updating..."
    git_attempt_update "$HOME/.config/base16-shell"
fi
echo
#+END_SRC

* Yabai

I previously used Yabai for window management: https://github.com/koekeishiya/yabai.

I prefer Rectangle instead: https://github.com/rxhanson/Rectangle.

This was my old ~.yabairc~:
#+BEGIN_SRC sh
yabai -m config layout bsp

yabai -m config debug_output on

# From here: https://github.com/koekeishiya/yabai/issues/2199#issuecomment-2031528636
function yabai_rule {
  yabai -m rule --add "$@"
  yabai -m rule --apply "$@"
}

yabai_rule app="Emacs" manage=on
yabai_rule app="^System Settings$" manage=off
yabai_rule app="^1 Password$" manage=off
#+END_SRC

These were commands I used to have in my ~.skhdrc~:
#+BEGIN_SRC sh
# yabai_*.*.log

# "o" is used because it reminds me of "Ctrl-x o" in Emacs
# Approach from: https://github.com/koekeishiya/yabai/issues/85
cmd + alt - o : yabai -m window --focus next || yabai -m window --focus first
cmd + alt - f : yabai -m window --toggle zoom-fullscreen
cmd + alt - n : yabai -m window --focus next
cmd + alt - p : yabai -m window --focus prev

cmd + alt - up : yabai -m window --swap north
cmd + alt - down : yabai -m window --swap south
cmd + alt - left : yabai -m window --swap west
cmd + alt - right : yabai -m window --swap east

# Key codes found using skhd --observe

# minus sign
cmd + alt - 0x1B : yabai -m window --minimize

# equals sign
cmd + alt - 0x18 : yabai -m window --deminimize
#+END_SRC

And this is what I used to have in my ~bin/symlinks.sh~:
#+BEGIN_SRC sh
# Yabai: https://github.com/koekeishiya/yabai
links["$HOME/.yabairc"]="$HOME/Code/dotfiles/.yabairc"
#+END_SRC

I also had the following setup in my ~init.el~. Yabai sometimes was unable to recognize Emacs as a window. Adding in the toolbar helped out. I didn't really use the toolbar though, so I would hide it after setup.
#+BEGIN_SRC elisp
(use-package emacs
  :custom
  (scroll-bar-mode nil)
  ;; tool-bar-mode used to be nil here, instead we turn it on so that Emacs
  ;; could correctly be recognized by Yabai. We turn it off after startup -
  ;; see :hook below.
  ;;
  ;; Idea for this setup from:
  ;; https://github.com/koekeishiya/yabai/issues/86
  (tool-bar-mode t)

  (mode-require-final-newline 'visit-save)
  (require-final-newline 'visit-save)

  (tooltip-mode nil)
  (tooltip-use-echo-area t)
  (tooltip-resize-echo-area t)

  (display-fill-column-indicator t)
  (display-fill-column-indicator-column 80)

  (sentence-end-double-space nil)

  (whitepsace-line-column 80)

  :init
  ;; Ask y or n instead of yes or no
  (fset 'yes-or-no-p 'y-or-n-p)

  :hook
  ((emacs-startup . (lambda () (cyr-load-custom "~/.emacs.d/custom.el")))
   (emacs-startup . cyr-load-private)
   (emacs-startup . cyr-exec-path-from-shell)
   ;; Turn the tool bar off. Yabai continues to recognize Emacs after, it is
   ;; only needed at startup.
   (emacs-startup . (lambda () (sleep-for 0.5) (tool-bar-mode -1)))
   (after-init . tab-bar-mode)
   (after-init . global-hl-line-mode)
   (after-init . nerd-icons-completion-mode)
   (after-init . column-number-mode)
   (prog-mode . display-line-numbers-mode)
   (prog-mode . display-fill-column-indicator-mode)))
#+END_SRC
